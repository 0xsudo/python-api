name: prod-ecs

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      # for private repos
      # actions: read
      # contents: read
      issues: write
      security-events: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip' # caching pip dependencies

      - name: Install dependencies
        run: pip install -r app/requirements.txt

      - name: Run code tests
        run: |
          cd app/
          coverage run -m pytest test/
          cd ../

      - name: Generate the test report
        if: ${{ always() }}
        run: |
          cd app/
          coverage report > coverage-test-report
          cd ../

      - name: Upload test report
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: pyhton test report
          path: app/coverage-test-report

      - name: Build docker image
        run: docker build -t py-api-ecr-repo:latest .

      - name: Genreate SBOM using syft
        uses: anchore/sbom-action@v0
        with:
          path: .
          image: python:latest
          # image: py-api-ecr-repo:latest
          format: spdx-json
          output-file: ${{ github.event.repository.name }}-sbom.spdx.json

      - name: Scan SBOM using grype (codeql)
        if: ${{ always() }}
        uses: anchore/scan-action@v3
        with:
          sbom: ${{ github.event.repository.name }}-sbom.spdx.json
          fail-build: true
          severity-cutoff: low

      - name: Create an issue if workflow fails
        if: ${{ failure() }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh issue create --title "Failure on workflow: ${{ github.workflow }} - ${{ github.sha }}" --body "Failure on job: ${{ github.job }}"
      # alternatively use github token as param:
      # with:
      #   repo-token: ${{ secrets.GITHUB_TOKEN }}
      # - name: Build ECR stack
      #   run: bash cloudformation/cfn-ecr-deploy.sh

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
        
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: us-east-1

  #     - name: Build ECS stack
  #       run: bash cloudformation/cfn-ecs-deploy.sh