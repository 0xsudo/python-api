name: prod-ecs

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip' # caching pip dependencies

      - name: Install dependencies
        run: pip install -r app/requirements.txt

      - name: Run code tests
        run: |
          cd app/
          coverage run -m pytest test/
          cd ../

      - name: Generate the test report
        if: ${{ always() }}
        run: |
          cd app/
          coverage report > coverage-test-report
          cd ../

      - name: Upload test report
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: pyhton test report
          path: app/coverage-test-report

      - name: Build docker image
        run: docker build -t py-api-ecr-repo:latest .

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v1

      # - name: build local container
      #   uses: docker/build-push-action@v2
      #   with:
      #     tags: py-api-ecr-repo:latest
      #     push: false
      #     load: true

      #You will need to enable codeql scanning from security settings

      # - name: Scan image for vulns
      #   uses: anchore/scan-action@v3
      #   id: scan
      #   with:
      #     image: py-api-ecr-repo
      #     fail-build: false
      #     severity-cutoff: critical # fail if severity is high

      - name: Scan entire project
        uses: anchore/scan-action@v3
        with:
          path: "."
          fail-build: true
          severity-cutoff: high

      - name: upload Anchore scan SARIF report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

      - name: Upload vulnerability report
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: vulnerability report
          path: sarif

      - name: Inspect action SARIF report
        run: cat ${{ steps.scan.outputs.sarif }}

      - name: Create an issue if workflow fails
        if: ${{ failure() }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh issue create --title "Failure on workflow: ${{ github.workflow }} - ${{ github.sha }}" --body "Failure on job: ${{ github.job }}"

      # - name: Build ECR stack
      #   run: bash cloudformation/cfn-ecr-deploy.sh

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
        
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: us-east-1

  #     - name: Build ECS stack
  #       run: bash cloudformation/cfn-ecs-deploy.sh